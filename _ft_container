Creation stack<int> c1 avec size = 0

c1 max_size = 2305843009213693951
c1 Empty: true
c1 size = 0
c1 capacity = 0
push(1) on c1
c1 size = 1
c1 capacity = 1
push(2) on c1
c1 size = 2
c1 capacity = 2
push(3) on c1
c1[0] = 1
c1 size = 3
c1 capacity = 4

c4 size = 2
c4 capacity = 2
 --> c1[0] = 1
 --> c4[0] = 2
 --> c1[1] = 2
 --> c4[1] = 3
c3 size = 30
c3 capacity = 30
Assign tests
push(3) on c1
push(4) on c1
push(5) on c1
push(6) on c1
push(7) on c1
push(8) on c1
push(9) on c1
push(10) on c1
 --> c1[0] = 1
 --> c1[1] = 2
 --> c1[2] = 3
 --> c1[3] = 3
 --> c1[4] = 4
 --> c1[5] = 5
 --> c1[6] = 6
 --> c1[7] = 7
 --> c1[8] = 8
 --> c1[9] = 9
c1 size = 11
c1 capacity = 16
 --> c1[0] = 2
 --> c1[1] = 2
 --> c1[2] = 2
 --> c1[3] = 2
 --> c1[4] = 2
 --> c1[5] = 5
 --> c1[6] = 6
 --> c1[7] = 7
 --> c1[8] = 8
 --> c1[9] = 9
c1 size = 5
c1 capacity = 16
c1 reserve(20)
 --> c1[0] = 2
 --> c1[1] = 2
 --> c1[2] = 2
 --> c1[3] = 2
 --> c1[4] = 2
 --> c1[5] = 0
 --> c1[6] = 0
 --> c1[7] = 0
 --> c1[8] = 0
 --> c1[9] = 0
c1 size = 5
c1 capacity = 20

Assign avec iterators c3.begin et c3.begin+3
 --> c3[0] = 20
 --> c3[1] = 20
 --> c3[2] = 20
 --> c3[3] = 20
 --> c3[4] = 20
 --> c3[5] = 20
 --> c3[6] = 20
c3 size = 30
c3 capacity = 30
 --> c1[0] = 20
 --> c1[1] = 20
 --> c1[2] = 20
 --> c1[3] = 2
 --> c1[4] = 2
 --> c1[5] = 0
 --> c1[6] = 0
c1 size = 3
c1 capacity = 20

Test erase avec c2 = 012346789
 --> c2[0] = 0
 --> c2[1] = 1
 --> c2[2] = 2
 --> c2[3] = 3
 --> c2[4] = 4
 --> c2[5] = 5
 --> c2[6] = 6
 --> c2[7] = 7
 --> c2[8] = 8
 --> c2[9] = 9
c2.erase begin() + 2
 --> c2[0] = 0
 --> c2[1] = 1
 --> c2[2] = 3
 --> c2[3] = 4
 --> c2[4] = 5
 --> c2[5] = 6
 --> c2[6] = 7
 --> c2[7] = 8
 --> c2[8] = 9
c2.erase begin + 2 to begin + 4
 --> c2[0] = 0
 --> c2[1] = 1
 --> c2[2] = 5
 --> c2[3] = 6
 --> c2[4] = 7
 --> c2[5] = 8
 --> c2[6] = 9
c2.erase begin() to end()

Test insert avec c2 = 012346789
{ 20 20 20 }  et c2.capacity() = 10 et size = 10
c2.insert(begin() + 2, 5): { 0 1 5 2 3 4 5 6 7 8 9 } 
c2.capacity() = 20 et size = 11
c2.insert(end(), 100): { 0 1 5 2 3 4 5 6 7 8 9 100 } 
c2.capacity() = 20 et size = 12

Creation d'un vector avec iterators begin + 2 / end - 2 de c2
{ 5 2 3 4 5 6 7 8 } 
c5.capacity() = 8 et size = 8

Insertion a c5[1] de c2[5] a c2[20]
{ 5 4 5 6 7 8 9 100 0 0 0 0 0 0 0 0 2 3 4 5 6 7 8 } 
c5.capacity() = 23 et size = 23

382D: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x49A3968: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x49B20E9: std::ostream& std::ostream::_M_insert<long>(long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x404834: dovector() (main.cpp:125)
==464128==    by 0x402834: main (main.cpp:49)
==464128== 
==464128== Conditional jump or move depends on uninitialised value(s)
==464128==    at 0x49A399E: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x49B20E9: std::ostream& std::ostream::_M_insert<long>(long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x404834: dovector() (main.cpp:125)
==464128==    by 0x402834: main (main.cpp:49)
==464128== 
==464128== Conditional jump or move depends on uninitialised value(s)
==464128==    at 0x49A393E: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x49B20E9: std::ostream& std::ostream::_M_insert<long>(long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x404C85: dovector() (main.cpp:136)
==464128==    by 0x402834: main (main.cpp:49)
==464128== 
==464128== Use of uninitialised value of size 8
==464128==    at 0x49A381B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x49A3968: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x49B20E9: std::ostream& std::ostream::_M_insert<long>(long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x404C85: dovector() (main.cpp:136)
==464128==    by 0x402834: main (main.cpp:49)
==464128== 
==464128== Conditional jump or move depends on uninitialised value(s)
==464128==    at 0x49A382D: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x49A3968: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x49B20E9: std::ostream& std::ostream::_M_insert<long>(long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x404C85: dovector() (main.cpp:136)
==464128==    by 0x402834: main (main.cpp:49)
==464128== 
==464128== Conditional jump or move depends on uninitialised value(s)
==464128==    at 0x49A399E: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x49B20E9: std::ostream& std::ostream::_M_insert<long>(long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x404C85: dovector() (main.cpp:136)
==464128==    by 0x402834: main (main.cpp:49)
==464128== 
==464128== Conditional jump or move depends on uninitialised value(s)
==464128==    at 0x49A393E: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x49B20E9: std::ostream& std::ostream::_M_insert<long>(long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x409985: std::ostream& operator<< <std::ostream, ft::vector<int, std::allocator<int> > >(std::ostream&, ft::vector<int, std::allocator<int> > const&) (vector.hpp:521)
==464128==    by 0x405D93: dovector() (main.cpp:190)
==464128==    by 0x402834: main (main.cpp:49)
==464128== 
==464128== Use of uninitialised value of size 8
==464128==    at 0x49A381B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x49A3968: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x49B20E9: std::ostream& std::ostream::_M_insert<long>(long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x409985: std::ostream& operator<< <std::ostream, ft::vector<int, std::allocator<int> > >(std::ostream&, ft::vector<int, std::allocator<int> > const&) (vector.hpp:521)
==464128==    by 0x405D93: dovector() (main.cpp:190)
==464128==    by 0x402834: main (main.cpp:49)
==464128== 
==464128== Conditional jump or move depends on uninitialised value(s)
==464128==    at 0x49A382D: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x49A3968: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x49B20E9: std::ostream& std::ostream::_M_insert<long>(long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x409985: std::ostream& operator<< <std::ostream, ft::vector<int, std::allocator<int> > >(std::ostream&, ft::vector<int, std::allocator<int> > const&) (vector.hpp:521)
==464128==    by 0x405D93: dovector() (main.cpp:190)
==464128==    by 0x402834: main (main.cpp:49)
==464128== 
==464128== Conditional jump or move depends on uninitialised value(s)
==464128==    at 0x49A399E: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x49B20E9: std::ostream& std::ostream::_M_insert<long>(long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==464128==    by 0x409985: std::ostream& operator<< <std::ostream, ft::vector<int, std::allocator<int> > >(std::ostream&, ft::vector<int, std::allocator<int> > const&) (vector.hpp:521)
==464128==    by 0x405D93: dovector() (main.cpp:190)
==464128==    by 0x402834: main (main.cpp:49)
==464128== 
==464128== Invalid read of size 4
==464128==    at 0x40BA88: __gnu_cxx::new_allocator<int>::construct(int*, int const&) (new_allocator.h:174)
==464128==    by 0x40A421: ft::viterator<int> ft::vector<int, std::allocator<int> >::insert<ft::viterator<int> >(ft::viterator<int>, ft::viterator<int>, ft::viterator<int>, ft::enable_if<!is_integral<ft::viterator<int> >::value, ft::viterator<int> >::type*) (vector.hpp:330)
==464128==    by 0x405F4A: dovector() (main.cpp:195)
==464128==    by 0x402834: main (main.cpp:49)
==464128==  Address 0xffffffffffffffdc is not stack'd, malloc'd or (recently) free'd
==464128== 
==464128== 
==464128== Process terminating with default action of signal 11 (SIGSEGV)
==464128==  Access not within mapped region at address 0xFFFFFFFFFFFFFFDC
==464128==    at 0x40BA88: __gnu_cxx::new_allocator<int>::construct(int*, int const&) (new_allocator.h:174)
==464128==    by 0x40A421: ft::viterator<int> ft::vector<int, std::allocator<int> >::insert<ft::viterator<int> >(ft::viterator<int>, ft::viterator<int>, ft::viterator<int>, ft::enable_if<!is_integral<ft::viterator<int> >::value, ft::viterator<int> >::type*) (vector.hpp:330)
==464128==    by 0x405F4A: dovector() (main.cpp:195)
==464128==    by 0x402834: main (main.cpp:49)
==464128==  If you believe this happened as a result of a stack
==464128==  overflow in your program's main thread (unlikely but
==464128==  possible), you can try to increase the size of the
==464128==  main thread stack using the --main-stacksize= flag.
==464128==  The main thread stack size used in this run was 8388608.
==464128== 
==464128== HEAP SUMMARY:
==464128==     in use at exit: 81,276 bytes in 7 blocks
==464128==   total heap usage: 20 allocs, 13 frees, 81,616 bytes allocated
==464128== 
==464128== LEAK SUMMARY:
==464128==    definitely lost: 0 bytes in 0 blocks
==464128==    indirectly lost: 0 bytes in 0 blocks
==464128==      possibly lost: 0 bytes in 0 blocks
==464128==    still reachable: 81,276 bytes in 7 blocks
==464128==         suppressed: 0 bytes in 0 blocks
==464128== Rerun with --leak-check=full to see details of leaked memory
==464128== 
==464128== Use --track-origins=yes to see where uninitialised values come from
==464128== For lists of detected and suppressed errors, rerun with: -s
==464128== ERROR SUMMARY: 61 errors from 13 contexts (suppressed: 0 from 0)
